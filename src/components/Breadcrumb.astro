---

import { getEntry } from 'astro:content';
import { RANK_LABELS, type Rank } from '../utils/rankLabels';
import { slugify } from '../utils/slugify';
import type { CollectionEntry } from 'astro:content';

interface Props {
  current: CollectionEntry<'taxonomia'>;
  parents: CollectionEntry<'taxonomia'>[];
}

const { current, parents } = Astro.props as Props;

// Construir rutas para cada entrada en la jerarqu√≠a
function buildPath(entry: CollectionEntry<'taxonomia'>) {
  return `/taxonomia/${entry.data.rank}/${entry.slug}`;
}
---

<nav aria-label="breadcrumb">
  <ul class="breadcrumb">
    <li><a href="/">Inicio</a></li>
    {parents.map((entry) => {
      // 'rank' ya tipado como Rank
      const info = RANK_LABELS[entry.data.rank as Rank];
      const label = info?.label ?? entry.data.rank;
      return (
        <li>
          <a href={buildPath(entry)}>{label}: {entry.data.name}</a>
        </li>
      );
    })}
    <li>
      <span>
        {RANK_LABELS[current.data.rank as Rank]?.label || current.data.rank}: {current.data.name}
      </span>
    </li>
  </ul>
</nav>

<style>
.breadcrumb {
  display: flex;
  list-style: none;
  gap: 0.5rem;
  padding: 0;
}

.breadcrumb li::after {
  content: '>';
  margin: 0 0.5rem;
}

.breadcrumb li:last-child::after {
  content: '';
}

.breadcrumb a {
  text-decoration: none;
  color: #0070f3;
}

.breadcrumb span {
  font-weight: bold;
}
</style>
